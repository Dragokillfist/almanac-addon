[manifest]
version = "1.0.0"
dump_lua = true
priority = -1

[[patches]]
[patches.pattern]
target = '''=[SMODS jen "Jen.lua"]'''
pattern = '''local new_colour = G.C.WHITE'''
position = "after"
payload = '''level = type(level) == "number" and level or level:to_number()'''
match_indent = true

[[patches]]
[patches.pattern]
target = '''=[SMODS jen "Jen.lua"]'''
pattern = '''if not no_astronomy and amount > 0 then
		if Jen.hv('astronomy', 9) then
			amount = amount * 5
		elseif Jen.hv('astronomy', 8) then
			amount = amount * 2
		end
	end'''
position = "at"
payload = '''if not no_astronomy and to_big(amount) > to_big(0) then
		if Jen.hv('astronomy', 9) then
			amount = amount * 5
		elseif Jen.hv('astronomy', 8) then
			amount = amount * 2
		end
	end'''
match_indent = true

[[patches]]
[patches.pattern]
target = '''=[SMODS jen "Jen.lua"]'''
pattern = '''if amount > 0 then
		if #SMODS.find_card('j_jen_guilduryn') > 0 and hand ~= jl.favhand() then
			for k, v in ipairs(G.jokers.cards) do
				if v.gc and v:gc().key == 'j_jen_guilduryn' then
					card_eval_status_text(v, 'extra', nil, nil, nil, {message = 'Redirected!', colour = G.C.MONEY})
					break
				end
			end
			hand = jl.favhand()
			if not instant then
				jl.th(hand)
			end
		end
	end'''
position = "at"
payload = '''if to_big(amount) > to_big(0) then
		if #SMODS.find_card('j_jen_guilduryn') > 0 and hand ~= jl.favhand() then
			for k, v in ipairs(G.jokers.cards) do
				if v.gc and v:gc().key == 'j_jen_guilduryn' then
					card_eval_status_text(v, 'extra', nil, nil, nil, {message = 'Redirected!', colour = G.C.MONEY})
					break
				end
			end
			hand = jl.favhand()
			if not instant then
				jl.th(hand)
			end
		end
	end'''
match_indent = true

[[patches]]
[patches.pattern]
target = '''=[SMODS jen "Jen.lua"]'''
pattern = '''if amount > 0 then
		add_malice(25 * amount)
	end
	if jl.invalid_number(number_format(G.GAME.hands[hand].level)) then
		G.GAME.hands[hand].level = 1e300
		if not instant then
			update_hand_text({sound = 'button', volume = 0.7, pitch = 0.8, delay = 0.3}, {level=maxfloat})
			delay(0.3)
		end
	end'''
position = "at"
payload = '''if to_big(amount) > to_big(0) then
        add_malice(25 * amount)
    end
    if jl.invalid_number(number_format(G.GAME.hands[hand].level)) then
        G.GAME.hands[hand].level = 1e300
        if not instant then
            update_hand_text({sound = 'button', volume = 0.7, pitch = 0.8, delay = 0.3}, {level=maxfloat})
            delay(0.3)
        end
    end'''
match_indent = true

[[patches]]
[patches.pattern]
target = '''=[SMODS jen "Jen.lua"]'''
pattern = '''if amount < 0 and Jen.hv('astronomy', 11) and not no_astronomy then
		local refund = math.abs(amount) / 4
		local fav = jl.favhand()
		if Jen.config.verbose_astronomicon then jl.th(fav) end
		fastlv(card, fav, not Jen.config.verbose_astronomicon, refund, true)
	end
	if amount > 0 and Jen.hv('astronomy', 12) and not no_astronomy then
		local dividend = amount / 10
		local fav = jl.favhand()
		if Jen.config.verbose_astronomicon then jl.th(fav) end
		fastlv(card, fav, not Jen.config.verbose_astronomicon, dividend, true)
	end'''
position = "at"
payload = '''if to_big(amount) < to_big(0) and Jen.hv('astronomy', 11) and not no_astronomy then
        local refund = math.abs(amount) / 4
        local fav = jl.favhand()
        if Jen.config.verbose_astronomicon then jl.th(fav) end
        fastlv(card, fav, not Jen.config.verbose_astronomicon, refund, true)
    end
    if to_big(amount) > to_big(0) and Jen.hv('astronomy', 12) and not no_astronomy then
        local dividend = amount / 10
        local fav = jl.favhand()
        if Jen.config.verbose_astronomicon then jl.th(fav) end
        fastlv(card, fav, not Jen.config.verbose_astronomicon, dividend, true)
    end'''
match_indent = true

[[patches]]
[patches.pattern]
target = '''=[SMODS jen "Jen.lua"]'''
pattern = '''if fusion then
			local can_afford = (Jen.fusions[fusion].cost or 0) <= G.GAME.dollars
			if can_afford and not card.already_notified then
				play_sound('jen_done')
				card:juice_up(0.5, 0.5)
				card.already_notified = true
			elseif not can_afford then
				card.already_notified = false
			end
			card.fusion_ready = can_afford
			card.target_fusion = fusion
			card.fusion_details = fusion .. ' : $' .. number_format(Jen.fusions[fusion].cost or 0)
		elseif #G.jokers.highlighted + math.max(0, #G.consumeables.highlighted - 1) > 0 then
			card.fusion_details = 'No recipe matches selected cards'
			card.already_notified = false
		end'''
position = "at"
payload = '''if fusion then
            local can_afford = to_big(Jen.fusions[fusion].cost or 0) <= to_big(G.GAME.dollars)
            if can_afford and not card.already_notified then
                play_sound('jen_done')
                card:juice_up(0.5, 0.5)
                card.already_notified = true
            elseif not can_afford then
                card.already_notified = false
            end
            card.fusion_ready = can_afford
            card.target_fusion = fusion
            card.fusion_details = fusion .. ' : $' .. number_format(Jen.fusions[fusion].cost or 0)
        elseif #G.jokers.highlighted + math.max(0, #G.consumeables.highlighted - 1) > 0 then
            card.fusion_details = 'No recipe matches selected cards'
            card.already_notified = false
        end'''
match_indent = true